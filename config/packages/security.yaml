security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
    role_hierarchy:
        ROLE_ADMIN: [ROLE_AUTEUR, ROLE_MODERATEUR]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # users_in_memory: { memory: null }
        in_memory:
            memory:
                users:
                    user:
                        password: useruser
                        roles: 'ROLE_USER'
                    admin:
                        password: adminadmin
                        roles: 'ROLE_ADMIN'
                    auteur:
                        password: auteur
                        roles: "ROLE_AUTEUR"
                    moderateur:
                        password: moderateur
                        roles: "ROLE_MODERATEUR"
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main_login:
            pattern: ^/login$
            anonymous: true
        main:
            pattern: ^/
            anonymous: false
            provider: in_memory
            form_login:
                login_path: login
                check_path: login_check
            logout:
                path: logout
                target: login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
